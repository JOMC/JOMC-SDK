<?xml version="1.0" encoding="UTF-8"?>
<!--

  Copyright (c) 2009 The JOMC Project
  Copyright (c) 2005 Christian Schulte <cs@jomc.org>
  All rights reserved.

  Redistribution and use in source and binary forms, with or without
  modification, are permitted provided that the following conditions
  are met:

    * Redistributions of source code must retain the above copyright
      notice, this list of conditions and the following disclaimer.

    * Redistributions in binary form must reproduce the above copyright
      notice, this list of conditions and the following disclaimer in
      the documentation and/or other materials provided with the
      distribution.

  THIS SOFTWARE IS PROVIDED BY THE JOMC PROJECT AND CONTRIBUTORS "AS IS"
  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
  THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
  PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE JOMC PROJECT OR
  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

  $Id$

-->
<jaxb:bindings xmlns:xjc="http://java.sun.com/xml/ns/jaxb/xjc"
               xmlns:jaxb="http://java.sun.com/xml/ns/jaxb"
               xmlns:xs="http://www.w3.org/2001/XMLSchema"
               xmlns:sdk="http://jomc.org/sdk/model"
               xmlns:ci="http://jaxb.dev.java.net/plugin/code-injector"
               jaxb:version="2.0">

  <jaxb:bindings schemaLocation="jomc-sdk-1.0.xsd">
    <jaxb:bindings node="xs:complexType[@name='SchemasType']">
      <ci:code><![CDATA[
    /**
     * Gets a schema for a given system id from this list of schemas.
     *
     * @param systemId The system id of the schema to return.
     *
     * @return The schema with system id {@code systemId} from the list or
     * {@code null} if no schema matching {@code systemId} is found.
     *
     * @throws NullPointerException if {@code systemId} is {@code null}.
     */
    public SchemaType getSchemaBySystemId( final String systemId )
    {
        if( systemId == null )
        {
            throw new NullPointerException( "systemId" );
        }

        for ( SchemaType s : this.getSchema() )
        {
            if ( systemId.equals( s.getSystemId() ) )
            {
                return s;
            }
        }

        return null;
    }

    /**
     * Gets a schema for a given public id from this list of schemas.
     *
     * @param publicId The public id of the schema to return.
     *
     * @return The schema with public id {@code publicId} from the list or
     * {@code null} if no schema matching {@code publicId} is found.
     *
     * @throws NullPointerException if {@code publicId} is {@code null}.
     */
    public SchemaType getSchemaByPublicId( final String publicId )
    {
        if( publicId == null )
        {
            throw new NullPointerException( "publicId" );
        }

        for ( SchemaType s : this.getSchema() )
        {
            if ( publicId.equals( s.getPublicId() ) )
            {
                return s;
            }
        }

        return null;
    }
]]>
      </ci:code>
    </jaxb:bindings>
  </jaxb:bindings>
</jaxb:bindings>
